// <auto-generated />
using System;
using BackEndAPI;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BackEndAPI.Migrations
{
    [DbContext(typeof(BackEndDBContext))]
    partial class BackEndDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Models.User", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(40)")
                        .HasMaxLength(40);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(35)")
                        .HasMaxLength(35);

                    b.Property<string>("Rights")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.HasKey("UserId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = new Guid("514b68ed-00ca-404a-8568-6bded2026954"),
                            Country = "Romania",
                            FirstName = "AAA",
                            LastName = "BBB",
                            Password = "blablabla192",
                            Rights = "rwx",
                            Username = "ababa124"
                        },
                        new
                        {
                            UserId = new Guid("7cc2eb8c-141a-4be3-b2dd-a51633f0fcc2"),
                            Country = "Germany",
                            FirstName = "CCCC",
                            LastName = "DD",
                            Password = "cd113",
                            Rights = "rx",
                            Username = "cd1234"
                        });
                });

            modelBuilder.Entity("Models.VM", b =>
                {
                    b.Property<Guid>("VMId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Configuration")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("LastSave")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("RealID")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("VMId");

                    b.HasIndex("UserId");

                    b.ToTable("VMs");

                    b.HasData(
                        new
                        {
                            VMId = new Guid("a52f37c8-8c28-4ab8-99bc-6c72c08fbe43"),
                            Configuration = "vms/sag1_s15sag3g9121410/config.json",
                            LastSave = "/vms/sag1_s15sag3g9121410/save.json",
                            Name = "MyFirstVM1",
                            RealID = "sag1_s15sag3g9121410"
                        },
                        new
                        {
                            VMId = new Guid("9403657a-7cf2-4abe-a3b2-3e89dbe55e25"),
                            Configuration = "vms/sag1_s15sag3g9121asa1210/config.json",
                            LastSave = "/vms/sag1_s15sag3g9121asa1210/save.json",
                            Name = "MyFirstVM2",
                            RealID = "sag1_s15sag3g9121asa1210"
                        },
                        new
                        {
                            VMId = new Guid("5a729aa7-14f7-436a-bfda-6ea5367d3d74"),
                            Configuration = "vms/sag1_s15sag3g9121asa1210abcd123/config.json",
                            LastSave = "/vms/sag1_s15sag3g9121asa1210abcd123/save.json",
                            Name = "MyFirstVM3",
                            RealID = "sag1_s15sag3g9121asa1210abcd123"
                        });
                });

            modelBuilder.Entity("Models.VM", b =>
                {
                    b.HasOne("Models.User", null)
                        .WithMany("VMS")
                        .HasForeignKey("UserId");
                });
#pragma warning restore 612, 618
        }
    }
}
