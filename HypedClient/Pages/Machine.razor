@page "/machine"
@inject HttpClient Http
@attribute [Authorize]


<div class="container-fluid border border-dark">
    <div class="row h-100">
        <div class="col-md-1 border border-dark ">
            <span class="oi oi-calculator" aria-hidden="true"></span>New
        </div>
        <div class="col-md-1 border border-dark">
            <span class="oi oi-calculator" aria-hidden="true"></span>Edit
        </div>
        <div class="col-md-1 border border-dark">
            <span class="oi oi-calculator" aria-hidden="true"></span>Delete
        </div>
        <div class="col-md-1 border border-dark">
            <span class="oi oi-calculator" aria-hidden="true"></span>Start
        </div>
        <div class="col-md-8 border border-dark">

        </div>
    </div>
    <div class="row h-100">
        <div class="col-md-4 border border-dark h-100">
            <div class="row border border-dark">
                <span class="oi oi-calculator" aria-hidden="true"></span>Linux testing
            </div>
            <div class="row border border-dark">
                <span class="oi oi-calculator" aria-hidden="true"></span>Linux testing
            </div>
            <div class="row border border-dark">
                <span class="oi oi-calculator" aria-hidden="true"></span>Linux testing
            </div>
            <div class="row border border-dark">
                <span class="oi oi-calculator" aria-hidden="true"></span>Linux testing
            </div>
        </div>
        <div class="col-xs-12 col-md-8 border border-dark h-100">
            @if (machines == null)
            {
                <div>Loading...</div>
            }
            else
            {
                @foreach (var machine in machines)
                {
                    <div>
                        @machine.MachineId
                    </div>
                    <div>
                        @machine.OS
                    </div>
                    <div>
                        @machine.Architecture
                    </div>
                    <div>
                        @machine.ThreadCount
                    </div>
                    <div>
                        @machine.RAM
                    </div>
                    <div>
                        @machine.IsRunning
                    </div>
                    <div>
                        @machine.ImageLocation
                    </div>
                    <div>
                        @machine.LastRun
                    </div>
                }
            }
        </div>
    </div>
</div>


@code {
    private MachineDetails _editMachine = new MachineDetails();

    private MachineDetails[] machines;

    protected override async Task OnInitializedAsync() => await GetMachines();

    private async Task GetMachines()
    {
        machines = await Http.GetJsonAsync<MachineDetails[]>("sample-data/machine.json");
    }

    private void EditItem(string id)
    {
        var editItem = machines.Single(i => i.MachineId == "1");
        _editMachine = new MachineDetails
        {
            OS = editItem.OS,
            Architecture = editItem.Architecture,
            ThreadCount = editItem.ThreadCount,
            RAM = editItem.RAM,
            IsRunning = editItem.IsRunning,
            ImageLocation = editItem.ImageLocation,
            LastRun = editItem.LastRun
        };
    }

    private async Task SaveItem()
    {
        EditItem("1");
        await Http.PutJsonAsync<MachineDetails>("/sample-data/account.json", _editMachine);
        await GetMachines();
    }

    public class MachineDetails
    {
        public string MachineId { get; set; }

        public string OS { get; set; }

        public string Architecture { get; set; }

        public string ThreadCount { get; set; }

        public string RAM { get; set; }

        public string IsRunning { get; set; }

        public string ImageLocation { get; set; }

        public string LastRun { get; set; }
    }
}
