@page "/account"
@inject HttpClient Http
@attribute [Authorize]


<h1>My account details</h1>
<h3> Personal details</h3>
<div class="container">
    <div class="row">
        <div class="col">
        @if (accounts == null)
        {

        }
        else
        {
            <select class="custom-select" multiple>
                @foreach (var account in accounts)
                {
                    <option @onclick="@(() => GetAccount(account))">@account.FirstName @account.LastName</option>
                }
            </select>
        }
        </div>
        <div class="col">
        <table class="table">
            <tbody>

                @if (accounts == null)
                {
                    <tr>Loading...</tr>
                }
                else
                {
                    @if (_editAccount.LastName == null)
                    {

                    }
                    else
                    {
                        <tr>
                            <td><label for="email"><b>First name : </b></label></td>
                            <td><input type="text" placeholder=@_editAccount.FirstName @bind="_editAccount.FirstName"></td>
                        </tr>
                        <tr>
                            <td><label for="text"><b>Last name : </b></label></td>
                            <td><input type="text" placeholder=@_editAccount.LastName @bind="_editAccount.LastName"></td>
                        </tr>
                        <tr>
                            <td><label for="text"><b>Email : </b></label></td>
                            <td><input type="text" placeholder=@_editAccount.Email @bind="_editAccount.Email"></td>
                        </tr>
                        <tr>
                            <td><label for="psw"><b>Country : </b></label></td>
                            <td><input type="text" placeholder=@_editAccount.Country @bind="_editAccount.Country"></td>
                        </tr>
                        <tr>
                            <td><label for="txt"><b>Password : </b></label></td>
                            @if (showPassword)
                            {
                                <td><input type="password" placeholder=@_editAccount.Password @bind="_editAccount.Password"></td>
                            }
                            else
                            {
                                <td><input type="text" placeholder=@_editAccount.Password @bind="_editAccount.Password"></td>
                            }
                            <td><button @onclick="@(() => InputPasswordVisible())">Show password</button></td>
                        </tr>
                        <tr>
                            <td> <label for="txt"><b>Rights : </b></label></td>
                            <td><input type="text" placeholder=@_editAccount.Rights @bind="_editAccount.Rights"></td>
                        </tr>
                        <tr>
                            <td><label for="no"><b>Workplace : </b></label></td>
                            <td><input type="text" placeholder=@_editAccount.Workplace @bind="_editAccount.Workplace"></td>
                        </tr>
                        <tr>
                            <td><label for="no"><b>Position title : </b></label></td>
                            <td><input type="text" placeholder=@_editAccount.PositionTitle @bind="_editAccount.PositionTitle"></td>
                        </tr>
                        <tr>
                            <td><label for="no"><b>Contact no. : </b></label></td>
                            <td><input type="text" placeholder=@_editAccount.ContactNumber @bind="_editAccount.ContactNumber"></td>
                        </tr>
                        /*<tr>
                            <td><label for="no"><b>VMS : </b></label></td>
                            <td><input type="text" placeholder=@_editAccount.VMS @bind="_editAccount.VMS"></td>
                        </tr>*/
                        <tr>
                            <td>
                                <div class="container signin">
                                    <p>Edit account details? <button @onclick="@SaveItem">Modify</button></p>
                                </div>
                            </td>
                        </tr>
                    }
                }
            </tbody>
        </table>
        </div>
    </div>
    
</div>


@code {

    private bool showPassword = true;

    // TO BE MODIFIED, aici am testat cu back-end-ul rulat pe alt PC din retea
    private string apiUrl = "https://localhost:44386/api/users";


    private AccountDetails _editAccount = new AccountDetails();

    private AccountDetails[] accounts;

    protected override async Task OnInitializedAsync() => await GetTodoItems();

    private async Task GetTodoItems()
    {
        accounts = await Http.GetJsonAsync<AccountDetails[]>(apiUrl);
    }

    private void InputPasswordVisible()
    {
        if (showPassword)
            showPassword = false;
        else
            showPassword = true;
    }

    private void GetAccount(AccountDetails account)
    {
        _editAccount = account;
    }

    private void EditItem(string id)
    {
        var editItem = accounts.FirstOrDefault(i => i.UserId == id);
        _editAccount = new AccountDetails
        {
            UserId = editItem.UserId,
            FirstName = editItem.FirstName,
            LastName = editItem.LastName,
            Email = editItem.Email,
            Country = editItem.Country,
            Password = editItem.Password,
            Rights = editItem.Rights,
            Workplace = editItem.Workplace,
            PositionTitle = editItem.PositionTitle,
            ContactNumber = editItem.ContactNumber,
            VMS = editItem.VMS
        };
    }

    private async Task SaveItem()
    {
        EditItem(_editAccount.UserId);
        await Http.PutJsonAsync<AccountDetails>(apiUrl, _editAccount);
        await GetTodoItems();
    }

    public class AccountDetails
    {
        public string UserId { get; set; }

        public string FirstName { get; set; }

        public string LastName { get; set; }

        public string Email { get; set; }

        public string Country { get; set; }

        public string Password { get; set; }

        public string Rights { get; set; }

        public string Workplace { get; set; }

        public string PositionTitle { get; set; }

        public string ContactNumber { get; set; }

        public ICollection<VM> VMS { get; set; }
    }

    public class VM
    {
        public Guid VMId { get; set; }
        public string RealID { get; set; }
        public string Name { get; set; }
        public string Configuration { get; set; }
        public string LastSave { get; set; }
        public Guid UserId { get; set; }
    }
}
